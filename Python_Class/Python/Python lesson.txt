early code
Courses 

My Learning

Python with Data Science


Syntax

Every programming language has rules and regulations which we must followed to achieve our the desired result, in other words syntax are set of instructions or rules that the tells user how to write our python code, for example if am to the display an output am going to abide by the rule of using the print() function and also we saved our python code with the extension of .py

Variables and Datatypes

In every program there is need for variables: WHY?, Because we will need to store some values the will be needed latter in the program to perform some operation so we need a named location to make this operation much easier, We tern variable to be a temporary memory used to define, store and perform operation on input data or values and this values are known as datatypes which are divided into two part Basic and Advance Datatypes. In naming variables there are some rules which we must abide with. The Basic Datatypes are divided into 4 types as follows while we discuss about the advance datatypes as we progress:

Int â€“ integers are whole numbers, eg. 12
Float â€“ float are decimal numbers, eg. 12.0
Str â€“ string: strings are usually passed inside quotation marks ‘’ or “”
Booleans  - Booleans are either True or False
you can read more about variables and datatypes with the link below

https://thepythonguru.com/datatype-varibles/

## is use to make Comment, it informs what next line or blocks of code is all about. we start a comment with an # tag, you can also find more about comment with the link below

https://www.digitalocean.com/community/tutorials/how-to-write-comments-in-python-3

Newline is used to end a line of code and as well begin a line of code in a string and it is denoted with '\n' you can find more with the below link

https://www.freecodecamp.org/news/python-new-line-and-how-to-python-print-without-a-newline/

Escape sequences allow you to include special characters in strings. To do this, simply add a backslash (\) before the character you want to escape.

String Concatenation and Formatting

string concatenation is the joining of two or more string be it declared or not while string formatting is a way of injecting variables into string with help of {} serving as a place holder and the format function to help place in the variables in all the place holder that is specified, read more about string concatenation and formatting with the link below

https://www.pythonforbeginners.com/concatenation/string-concatenation-and-formatting-in-python

String Mothed 

This are Function that can be applied on a string, Find more details about string method with the below link

https://www.programiz.com/python-programming/methods/string



Class Note

## variables
## variable naming can not start with digits
## vartiable naming cannot have any special characters
## variable naming can not contain a space

num= 32 ## integer
num1=12.0 ## float
name="Early code" ## string
name2=True ## Booleans

print(num)
print(num1)
print(name)
print(name2)

## string formatting
## Backward slash
word= "we\'re are brothers from the town"
print(word)

early_code='welcome to class'
print(early_code)

## New line string
word2="python is fun\npython is easy\npython is great"
print(word2)

## multiline string
word4= ''' python is fun
python is easy
python is interesting '''
print(word4)

## string concatenation
print("Hello" + "World")
print("my name is" +" " + "world") ## string and strings 
print("my name is" + name)## string and variables

Assignment 1.

1. Use the print() function to display "MY NAME IS JAMES"
2. Declared a variable called state to hold the following statement  a. From a well-known village with good culture in kogi state 
3. use the newline escape character to write this list
a. "shoe","bag","belt","dress"
4.Write a program to display a poem in upper case using the multiline

My Assignments | early code

Solution
## Q1. Use the print() function to display "MY NAME IS JAMES"
print("MY NAME IS JAMES")
world="my name is james"
print(word.upper()) 
## Q2. Declared a variable called state to hold the following statement  
## Q2a. From a well-known village with good culture in kogi state
state="From a well-known village with good culture in kogi state" ## string
print(state)
## Q3. use the newline escape character to write this list
## Q3a. "shoe","bag","belt","dress"
print("shoe\nbag\nbelt\ndress")
## 4. Write a program to display a poem in upper case using the multiline
poem="""In shadows deep, where dreams reside,
A tale unfolds, by moon's soft guide.
Whispers dance upon the night,
As stars paint the sky with their gentle light.

Through verdant meadows, where flowers bloom,
The scent of Spring, a sweet perfume.
Each petal's touch, a fleeting caress,
A symphony of colors, to impress.

From lofty peaks to valleys low,
Nature's canvas, a stunning show.
The rivers sing, a peaceful song,
As they journey through woodlands, wild and strong.

Oh, the mysteries that nature weaves,
In fragile webs among the leaves.
From tiny creatures to soaring birds,
Life's harmony, in every word.

And as the seasons come and go,
In nature's rhythm, we learn and grow.
For in its embrace, we find our place,
A reminder of beauty, love, and grace.

So let us ponder, let us roam,
In nature's heart, we find our home.
And may this poem, light and true,
Awaken in you a love anew."""
print(poem)## multilines
print(poem.upper())## changing a variable to an uppcase



Research Further
In Windows PowerShell, escape characters are special characters that are used to represent certain characters in a string or command. Here are some commonly used escape characters in Windows PowerShell:

1. Backtick (`): The backtick is used for escaping special characters that have a specific meaning in PowerShell. For example, to include a double quote inside a string, you can use ""`. Here's an example:

powershell
Write-Host "This is a `"quoted`" string"

Output: This is a "quoted" string

2. Backslash (\): The backslash is used to escape special characters that have a specific meaning in regular expressions or as literal characters. For example, to include a backslash character in a string, you can use "\\". Here's an example:

powershell
Write-Host "This is a backslash: \\"

Output: This is a backslash: \

3. Single quote (''): Single quotes are used to create literal strings where escape characters are not processed. However, to include a single quote inside a single-quoted string, you can use two consecutive single quotes. Here's an example:

powershell
Write-Host 'This is a single-quoted string with a single quote: '''Hello'''

Output: This is a single-quoted string with a single quote: 'Hello'

These are some of the commonly used escape characters in Windows PowerShell. It's important to use escape characters appropriately to avoid syntactical issues and correctly represent the desired characters within your strings or commands.

Certainly! Here are a few more escape characters commonly used in Windows PowerShell:

4. Newline (`n): The escape sequence `n is used to represent a newline character. It is often used when you want to create line breaks within a string. Here's an example:

powershell
Write-Host "Line 1`nLine 2"

Output:

Line 1
Line 2


5. Carriage return (`r): The escape sequence `r represents a carriage return character. Similar to the newline escape character, it is used to create line breaks within a string. Here's an example:

powershell
Write-Host "Carriage return`rLine 2"

Output:

Line 2rn


6. Tab (`t): The escape sequence `t is used to represent a horizontal tab character. It is commonly used to insert tab spaces within a string. Here's an example:

powershell
Write-Host "This is a`ttabbed string"

Output: This is a        tabbed string

7. Unicode escape sequence: PowerShell supports Unicode escape sequences in the format of `u[hex]. It allows you to represent Unicode characters using their hexadecimal values. Here's an example:

powershell
Write-Host "Unicode character: `u03A9"

Output: Unicode character: Ω

These are a few more examples of escape characters used in Windows PowerShell. Remember to use them appropriately based on your requirements to handle special characters and formatting in your strings or commands.



Day 2
early code

Datatype Conversion
Since there can only be joining of string and string be it assigned to a variable or not and same for int and float, in a case where we have to join to or more values of different datatypes we would have to convert it first.

There are two types of Type Conversion in Python:

Implicit Type Conversion
Explicit Type Conversion
In Implicit type conversion of data types in Python, the Python interpreter automatically converts one data type to another without any user involvement while In Explicit Type Conversion in Python, the data type is manually changed by the user as per their requirement

Note integer and float datatype can be convert to each other and aswell to string but string datatype cannot be converted to float or integer except it is a number that is passed in that string. Read more about type conversion in python with the below link

https://www.programiz.com/python-programming/type-conversion-and-casting

Operators 
Operators are special symbols that perform some operation on operands and returns the result. 

Python Operators includes Arithmetic, Assignment, Comparison, Logical, Identity, Membership, Bitwise

Arithmetic Operators
Arithmetic operators perform the common mathematical operation on the numeric operands.

Assignment Operators
The assignment operators are used to assign values to variables.

Comparison Operators
The comparison operators compare two operands and return a boolean either True or False.

Logical Operators
The logical operators are used to combine two boolean expressions.

Identity Operators
The identity operators check whether the two objects have the same id value

Membership Operators
The membership test operators in and not in test whether the sequence has a given item or not.

Read more about operators with this link https://www.tutorialsteacher.com/python/python-operators

Input Function
we use the input function to prompt user for a value instead of assigning a static value

eg name = input('Please enter your name')

age = int(input('Please provide your age'))


Day 2 Note

## string formatting
price1=45000
price2=50000
price3=85000
## method 1
report="one shirt{}, shoe price is {}, jeans price is {}"
print(report.format(price1,price2,price3))

## method 2
print(f"shirt price is {price1} shoe price is {price2} and jeans price {price3}")

## using multilines
print(f"""shirt price is {price1}
shoe price is {price2}
jeans price is {price3}
""")

word5= "python is easy"
word6="  python is fun  "
print(word5.title())
print(word5.capitalize())
rint(word5.lower())
print(word5.upper())
print(word5.split())
print(word6.strip())

## Data type conversion
num1= "23" ##implicit conversion
num2= "45"
add= int(num1) + int(num2)
print(add)
print(float(num1))
print(float(add))
print(str(num2))

## input functions, basically used to prompt user.
name=input("what's your name?:")
##print(name)
age=int(input("what's your age?:"))
##print(age)

## Operators
## Types of Operators
## Arithemetic Operators
## Addition +
## Subtraction -
## Multiplication *
## Division /
## floor or integer Division //
## Exponatial**
## Remender %

num3=int(input("whatis the the first number:"))
num4=int(input("whatis the the second number:"))
print(f"{num3}+{num4}={num3+num4}")
print(f"{num3}-{num4}={num3-num4}")
print(f"{num3}*{num4}={num3*num4}")
print(f"{num3}/{num4}={num3/num4}")
print(f"{num3}//{num4}={num3//num4}")
print(f"{num3}**{num4}={num3**num4}")
print(f"{num3}%{num4}={num3%num4}")

